작성자 : 202004035 김평화

텍스트 파일 : 사람들이 사용하는 글자 혹은 문자들로만 구성되는 파일
텍스트 파일 종류 : txt, HTML, XML C++ Source, C Source

바이너리 파일 :
문자로 표현되지 않는 바이너리 데이터가 기록된 파일 (이미지, 오디오, 그래픽, 컴파일된 코드)

텍스트 파일의 각 바이트 -> 문자로 해석
바이너리 파일의 각 바이트 -> 문자로 해석되지 않는 것도 있음

바이너리 파일 종류 : jpeg, bmp, mp3, hwp, doc, ppt, obj, exe
* hwp 파일은 바이너리 파일이다!!!

>> 연산자와 istream의 get, read 함수
- 연결된 장치로부터 읽는 함수
- 키보드에 연결되면 키 입력을, 파일에 연결되면 파일에서 입력

<< 연산자와 ostream의 put, write 함수
- 연결된 장치에 쓰는 함수
- 스크린에 연결되면 화면에, 파일에 연결되면 파일에 출력

fstream 헤더 파일과 std 네임스페이스 선언 필요!!!

파일 입출력 방식
1. 텍스트 I/O
2. 바이너리 I/O
차이점 : 개형 문자("\n")를 다루는데 있음

파일 모드 (in, out, ate, app, trunc, binary)

get과 EOF : get으로 계속 가져오다가 끝에서 읽으면 EOF(-1) 값을 리턴한다

get이 하나에 글자라면 getline은 한줄을 사용 가능

raed()/write()
- 블록 단위로 파일 입출력 가능
-> 이것에 대한 예제는 많이 풀어보는 것이 중요해 보임.

텍스트와 바이너릐의 확실한 차이점 :
- 파일의 끝을 처리하는 방법에는 차이가 없음
- 개행 문자 '\n'를 읽고 쓸 때 서로 다르게 동작하는 차이가 있다.

*기말고사가 끝나고 12번 문제를 제대로 풀지 못하여 정리노트를 다시 정리하고 있는데
느끼고 생각한 것은 텍스트 I/O는 어느정도 이해도가 있었지만
바이너리 I/O에 대한 이해도가 낮았던 것이 스스로 너무 아쉬웠고
제대로 코딩도 못 하고 기말고사를 망친 것 같아 이 부분은 계속 더 공부를 해야 할 것 같다.

오류의 종류 :
1. 컴파일 오류
2. 실행 오류

예외처리 try throw catch
흔히 try catch로 익숙한 구문이고
기본적으로 잘 알고 있는 내용이기에
여기서 throw 문의 위치랑 어떤식으로 선언하고 사용해야 하는지
익숙하게 숙달 해야 한다.

물론 예외 클래스를 만들 수 있다는 점도 꼭 필수로 알아야 한다!!

C++의 이름 규칙과 extern C는 수업 내용에서 너무 빠르게 지나갔지만
유용한 내용들이기에 계속 pdf를 읽어보고 이해하는 것이 중요.
